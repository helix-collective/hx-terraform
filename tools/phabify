#!/usr/bin/env python3
#
# Helper to follow the workflow of having one git commit per code phab code review. This script
# automatically calls the arc command, with the appropriate args, depending on if we are creating
# a new review, or updating an existing one.
#
# It also amends the commit to include a link to the PR, for future reference.
#
# USAGE (First time): tools/phabify.py Reviewer [Reviewer]
# USAGE (On update): tools/phabify.py
#
#    If you would like to push up PRs for changes other than the HEAD commit, then perform an interactive rebase
#    and push up PRs as you go along.

import argparse
import os
import subprocess
import sys

USER = os.environ['USER']

parser = argparse.ArgumentParser(description='Helper to upload code reviews to Phabricator.')
parser.add_argument('reviewer_or_msg_args', metavar='REVIEWER',
                    type=str, nargs='*',
                    help='if first time uploading to phab, a list of reviewers. ' +
                    'On subsequent updates, a message to post to phab alongside the update.')
parser.add_argument('--reword', '-r', action='store_true',
                    help='on subsequent updates, also update the title, description, and list of reviewers on Phabricator. ' +
                    'WARNING: this will overwrite any changes made in the phab UI.')
args = parser.parse_args()

def call(*cmd):
    p = subprocess.Popen(cmd, bufsize=0)
    p.wait()
    if p.returncode != 0:
        raise SystemExit(1)

def show(fmt, rev):
    #Can't use 'call', as we actually care about the output in this case
    return subprocess.check_output(["git", "show", "-s", "--format=" + fmt, rev]).strip()

def has_revision(body):
    for l in body.splitlines():
        if 'differential revision:' in l.lower().decode('utf-8'):
            return True
    return False

body = show('%b', 'HEAD')

if has_revision(body):
    cmd = ["arc", "diff"]
    if args.reword:
        cmd.append("--verbatim")
    msg = ' '.join(args.reviewer_or_msg_args) or 'phupdate'
    cmd.extend(["--allow-untracked", "-m", msg, "HEAD^1"])
else:
    if len(sys.argv[1:]) == 0:
        print("Specify reviewers")
        raise SystemExit(1)

    cmd = ["arc", "diff", "--allow-untracked", "--verbatim", "--browse", "--reviewers"] + [' '.join(args.reviewer_or_msg_args)] + ["HEAD^1"]

call(*cmd)
